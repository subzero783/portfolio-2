export const posts = [
  {
    id: 0,
    video_id: "uVY8eaaaiMo",
    active: true,
    url: "how-to-install-wordpress-in-cpanel",
    title: "How to Install WordPress in CPanel",
    date: "2022/8/22",
    author: "Developer Gus",
    categories: ["WordPress", "CPanel"],
    content:
      "<p>Today I will teach you how to install the Content Management System of WordPress in Cpanel.&nbsp;</p><br><h2>Before Installing WordPress</h2><p>Before getting started, you should have purchased or subscribed already to hosting. I like to use Namecheap for buying domains and hosting since they have excellent customer service, among other great benefits. Another essential thing to note before installing WordPress is checking that your web hosting provider fulfills the necessary software and conditions. Also, you must have access to the server and some tools. So the requirements on the server side are PHP 7.4 or greater and having MySQL 5.6 or MariaDB 10.1 or greater. I&apos;m going to leave a link to a detailed list of requirements in the description of this video (1)&nbsp;</p><br><h2>Downloading WordPress</h2><p>The first step is to go to WordPress.org and download the WordPress package. So let&apos;s open a web browser; I like to use Google Chrome. Then let&apos;s type WordPress.org/download and click enter. Where it says Download and Install yourself, you will see a button to Download Version 6.0.1 as of now, but you may see a newer version of WordPress while watching this video. Once the download has finished, the next step is to open your hosting account.</p><br><h2>Open your Shared or Reseller Hosting Account Cpanel</h2><p>We will open the Cpanel of our hosting account, click on File Manager, and upload the zipped folder we downloaded from WordPress.org into your desired folder. You can upload the zipped folder into your Cpanel account&apos;s root installation, a subfolder, or subdomain. Once you have finished uploading the zipped WordPress package through Cpanel, it&apos;s time to extract the zipped folder into the root of where you want the WordPress files and directories to be. In my case, I&apos;m going to extract the zipped folder into a directory called &quot;new-wordpress.&quot; As you can see, the zipped WordPress folder got extracted into a folder called WordPress, and we don&apos;t want that. So let&apos;s first delete the zipped folder and then move the files and folders from the WordPress folder into the root of the folder named &quot;new-wordpress .&quot;I go into the directory, select all the files and folders and move them into the directory called &quot;new-wordpress&quot; by dragging and dropping them. Now that we have successfully uploaded and unzipped the WordPress directory, it&apos;s time to create a MySQL database, create a user, and assign it to that database.&nbsp;</p><br><h2>Create a MySQL Database and Database User</h2><p>We create a MySQL database in CPanel by opening CPanel, going to the Databases section, and then clicking on the MySQL Databases link. On this page, we can create a new database, modify them, see your current databases, create a new MySQL user, and assign a user to a database. For this video chapter, please write down the database prefix, database name, username, and password assigned to the username.&nbsp;</p><br><p>First, we will create a new database that will always have a prefix assigned automatically by CPanel. Then I will write a database name after calling it new underscore WordPress (new_wordpress) and click on the Create Database button. The second step is to create a new user by going to the Add New User section. I&apos;m going to call this new user &quot;user_one.&quot; We need to assign a password by clicking on the password generator button, which will open a popup to generate a new password. By clicking the generate password button, if you want a different password, you can click this button many times. Then we click the checkbox, &quot;I have copied this password in a safe place .&quot; Please make sure to write down the password or type it somewhere safe. I would recommend using LastPass to store all your passwords which I have left a link to in the description of this video. We then click on the Use Password button as it becomes available to click now. After adding the password that we just generated, you can write your own as well, but I would recommend using a tool to develop a strong password that is very difficult to figure out. LastPass also has a tool that will generate strong passwords, which you can use whenever you want to create an account.&nbsp;</p><br><p>Now that we have created a database and a username with its password, it&apos;s time to assign the username to the newly created database by going to the Add User to Database section, selecting the new username, selecting the new database, and then clicking on the Add button. It will take us to the Manage User Privileges page, where we can assign the privileges we want this username to have for this newly created database. In this case, I will click on the All Privileges checkbox. Explaining what each privilege does would take a whole video, so for time&apos;s sake, I&apos;m going to click on the All Privileges checkbox for now. I will leave a link to the official Privileges Provided by MySQL page for your reference. We will then click on the Make Changes button and return to the MySQL Databases page. The last step is to type and run the WordPress install script by going to the URL or WordPress directory where we want WordPress installed, which in my case is https://cyberhomelife.com/new-wordpress.&nbsp;</p><br><h2>Run the WordPress Install Script</h2><p>The install script will first ask you to pick the language you would like your WordPress website to use. After that, it lets you know that you need to know the following information. We click on the button that says Let&apos;s Go, and then the install script asks you to enter the database details we wrote down, so let&apos;s enter them into their respective field. For the Database Host, you can leave it as saying localhost. We then click on the Submit button and run the installation. It will then take us to a page asking us to provide details for the newly created WordPress website. For the Site Title, I will enter &quot;new underscore WordPress.&quot; As for the Username and Password, I will enter the username of &quot;admin&quot; and generate a strong password using the LastPass password generator or use the one already provided. This username and password are for accessing the website and should be different from the database username and password, which are only for connecting your WordPress installation to its database. For the email, I&apos;m going to write my email. Please note the username, password, and email somewhere safe before continuing. For the Search Engine Visibility checkbox, I recommend clicking it because you don&apos;t want your website to be indexed by search engines such as Google and Bing before you finish creating all the pages and blog posts that you want to complete first. After entering all the information, we click on the Install WordPress button, and we have finished installing WordPress.&nbsp;</p><br><h2>Login Into WordPress</h2><p>We can now click on the login button that will take us to our dashboard login page or add the forward slash &quot;wp-admin&quot; to the end of our website domain. I will type my dashboard username and password to access my website. We have successfully logged in. Now that&apos;s how you install WordPress on CPanel. The following steps I recommend are installing specific plugins for things like security and Search Engine Optimization and removing particular plugins that are not helpful. Thank you for watching this tutorial; remember to let me know what next topic you would like to learn. In the description of this video, I will leave the skills I have experience in and can teach you, so please leave a comment to let me know or send me an email. Remember to like this video and subscribe to my channel to get a notification of my newest web development video.&nbsp;</p><br><h3>References</h3><p>(1)<a href='https://wordpress.org/about/requirements/' aria-label='https://wordpress.org/about/requirements/' target='_blank' rel='noreferrer noopener'>https://wordpress.org/about/requirements/</a></p>",
  },
  {
    id: 1,
    video_id: "m7obEA31cig",
    active: true,
    url: "how-to-customize-a-hubspot-form-with-css-and-javascript",
    title: "How to Customize a HubSpot Form with CSS and JavaScript",
    date: "2022/12/05",
    author: "Developer Gus",
    categories: ["HubSpot", "CSS", "JavaScript", "jQuery", "WordPress"],
    content:
      "<p>Today I will teach you how to customize a HubSpot form with CSS and JavaScript, including jQuery.&nbsp;</p><br/><h2>Required Before Getting Started</h2><p>Before getting started, you need to have a Hubspot pro account and have already created a form. Let me explain what type of Hubspot account you need.</p><br/><h2>Subscribed to a Hubspot Pro Account</h2><p> Let&apos;s go to an article that HubSpot has made in their HubSpot Knowledge Base titled &quot;Set up and style a HubSpot form on an external site.&quot; Which I will leave a link to in the description (1). When you click the heading &quot;Style your embedded form with CSS in your external stylesheet &quot; in the article&apos;s table of contents or when you scroll to the bottom. You will see a notice at the bottom of the page that Hubspot mentions. To style your Hubspot form in your external stylesheet, you first need to be subscribed to one of the following Hubspot plans:&nbsp;</p><ol> <li>Marketing Hub</li><li>or CMS Hub Professional</li><li>or Enterprise</li></ol><p> So please make sure to be subscribed. Either to one of those Hubspot plans or to be in a trial of one of those Hubspot plans. I will leave a link to the web page of Products &amp; Plans that Hubspot offers in the description of this video (2). Next, we will open a Hubspot form I created in my account.&nbsp;</p><br/><h2>Opening and Sharing a Hubspot Form</h2><p> We do this by logging into our Hubspot account, going to the top menu, clicking the Marketing tab, hovering over the Lead Capture tab, and clicking on the Forms tab. We then click on one of the forms to open the Hubspot form editor or create a new form. In my case, I already made a form that I will now open, as you can see on the right-hand side of this form editor that we have open. You can see I have added several fields, one for the First name, a form field for an Email, and another to write a message.&nbsp;</p><br/><p> Once you are satisfied with the fields and other content, such as text and logo, that you have added, we click on the Style &amp; preview tab at the top of the page. We need to click the &quot;Set as raw HTML form&quot; toggle to switch it on. According to the Hubspot article we first read, this will: &nbsp;render the form as a &quot;raw HTML element on your external page as opposed to inside an iframe, and any default HubSpot styling applied to the form will be removed.&quot; So that&apos;s what we want, without any Hubspot styling, and we can apply our styling on our site.&nbsp;</p><br/><h2>Embed the Hubspot Form on Your Website Page</h2><p> We will then embed the form on one of my web pages by clicking on the Embed button on the top right and clicking on the Copy button at the bottom, which copies the HTML code of the form. I will go to one of the pages on my WordPress website and open the page to edit it. I&apos;m going to log in, go to the Pages, and then click on the&nbsp; <strong>Sample Page</strong> to edit it. I will paste the copied HTML code of the Hubspot form. Let&apos;s quickly look at the page&apos;s front end to see the form. As you can see, the Hubspot form is now viewable on the front end but is missing the styling we will add with CSS. It&apos;s also missing the functionality we will add with JavaScript, explicitly using the jQuery framework.&nbsp;</p><br/><h2>Adding Styling to the Hubspot Form&nbsp;</h2><p> To add our styling to the Hubspot form using CSS, we must add the style properties where WordPress will not stop the styling from being added to the HubSpot form. An ideal place is in the style.css file, which is at the root of your child theme. Another way to add our custom CSS for the HubSpot form is to add a style tag above the HubSpot script tag.&nbsp;</p><br/><p> I will choose to add a style tag, and I must first minify the CSS properties before adding them. I need to do this before updating the page because the default WordPress WYSIWYG editor you see when editing every page and post will add a paragraph p tag around your CSS code. WordPress will wrap not only CSS code but also JavaScript code. So to avoid that, what you can do is minify the CSS and JavaScript code inside the default WordPress WYSIWYG editor.&nbsp;</p><br/><p> I will copy the CSS properties I have written from a file and then paste them into a CSS autoprefixer. This one is called Autoprefixer CSS Online, and I will add a link to it in the description (3). Once you have prefixed the CSS properties so they may work on the various browsers that people use, I will copy the CSS and paste it into an online CSS minifier. I will add a link to it in the description (4). Now that I have minified the CSS code, I will paste it into the WYSIWYG page editor above the script tag inside a style tag. Let&apos;s save the page, visit the front end, and see if the form has styling. As you can see, the form now has styling.</p><br/><h2>Adding the Functionality to the HubSpot Form</h2><p> To add JavaScript to the HubSpot form, I will add it inside the script tag of the WYSIWYG editor, specifically inside the HubSpot script. What we have been doing is customizing the embed code of the HubSpot form. One of the conditions to add JavaScript to the HubSpot form is to ensure the embed code is raw HTML which I already did. I will then add a configuration option to the JavaScript code that came with the HubSpot form. The configuration option is called &quot;onFormReady,&quot; and it will have a callback function. You can find this information in a HubSpot article called &quot;How to customize the form embed code,&quot; which I will leave a link to in the description (5). Inside this callback function is where I added my custom JavaScript with jQuery code.</p><br/><p> All it does is move the label element of each field to the top of it whenever a user focuses on the area by clicking on it, and it does the reverse when a user unfocuses from the field area by clicking somewhere else. So let&apos;s add my JavaScript code to the form by copying and pasting it into a JavaScript minifier; I copy this code, paste it inside the script tag, and finally add all of the HTML to the HubSpot form. Let&apos;s look at the front end to see if the functionality is working now. Great! I have now finished adding the styling and functionality to the HubSpot form.&nbsp;</p><br/><h2>Conclusion</h2><p>That is how you customize a HubSpot form with CSS and JavaScript. The steps are to:</p><ol> <li>Create a HubSpot form. &nbsp;</li><li>Set the HubSpot form to raw HTML when editing in HubSpot.&nbsp;</li><li>Add the embed code to your website, and&nbsp;</li><li>Add styling and functionality.&nbsp;</li></ol><p> For the styling, remember to minify it if you&apos;ve put it inside of a WordPress WYSIWYG editor. When adding JavaScript to a HubSpot form, it has to go inside the form script embed code using one of the configuration options HubSpot gives you. Thank you for watching this tutorial; remember to let me know what next topic you would like to learn. In the description of this video, I will leave links to all the sites I used as tools to help me and also links to all the code as minified and unminified. Remember to like this video and subscribe to my channel to get a notification of my newest web development video.&nbsp;</p><br/><h3>References</h3><p> (1) <a href='https://knowledge.hubspot.com/forms/' aria-label='https://knowledge.hubspot.com/forms/' rel='noreferrer noopener' target='_blank'>https://knowledge.hubspot.com/forms/how-can-i-share-a-hubspot-form-if-im-using-an-external-site</a></p><p> (2) <a href='https://www.hubspot.com/pricing/marketing?products=marketing-hub-starter_1&amp;term=annual' aria-label='https://www.hubspot.com/pricing/marketing?products=marketing-hub-starter_1&amp;term=annual' rel='noreferrer noopener' target='_blank'> https://www.hubspot.com/pricing/marketing?products=marketing-hub-starter_1&amp;term=annual </a></p><p> (3) <a href='https://autoprefixer.github.io/' aria-label='https://autoprefixer.github.io/' rel='noreferrer noopener' target='_blank'>https://autoprefixer.github.io/</a></p><p> (4) <a href='https://www.toptal.com/developers/cssminifier' aria-label='https://www.toptal.com/developers/cssminifier' target='_blank' rel='noreferrer noopener'>https://www.toptal.com/developers/cssminifier</a></p><p> (5) <a href='https://legacydocs.hubspot.com/docs/methods/forms/advanced_form_options' aria-label='https://legacydocs.hubspot.com/docs/methods/forms/advanced_form_options' target='_blank' rel='noreferrer noopener'> https://legacydocs.hubspot.com/docs/methods/forms/advanced_form_options </a></p>",
  },
  {
    id: 2,
    video_id: "kFeFz6vnBPc",
    active: true,
    url: "how-to-style-elements-in-a-hubspot-form-with-css-and-javascript-jquery",
    title: "How to Style Elements in a HubSpot Form with CSS and JavaScript/jQuery",
    date: "2023/07/03",
    author: "Developer Gus",
    categories: ["HubSpot", "CSS", "JavaScript", "jQuery", "WordPress"],
    content: "<p> Today I'm going to show you how to customize a HubSpot form with your own CSS and JavaScript code. </p><br/><h2>Required Before Getting Started</h2> <p>I do want to say one thing before getting started. If I mention any links in this video you can find them in the description as well so let's get right to the point and show you the steps on how this is achieved.</p><br/><h2>Creating a HubSpot Account</h2><p> So the first step to customizing a HubSpot form with your custom code is to have a HubSpot account to do that I will head over to hubspot.com and then I'm going to click on the button that says get started free. I will then sign up. I already created my account so I will log in using that one. </p><br/><h2>How to Create a HubSpot Form</h2><p>By clicking on the create form button, I then choose the embedded form check box and click on the next button at the top right after that I click on the registration form template which has an email, first name, last name, and phone number fields. I then click on the start button. I need to remove all the HubSpot default styling of this new form I just created as it comes with the CSS or otherwise known as styling from HubSpot. I do that by clicking on the style and preview tab. Then I need to click on the toggle at the top left called set as raw HTML form if there is a lock icon next to the toggle then you need to sign up for the 14-day trial or sign up for the marketing Hub or CMS Hub professional or Enterprise subscription with your HubSpot account. That's the only way you can remove that lock icon and be able to remove the default form styling. This is needed so that I can add my own custom CSS and JavaScript code, otherwise I won't be able to once I click on the toggle called set as raw HTML form.</p><br/><h2>Embedding the Form</h2><p>Then I need to embed the code of this form in my website. I do that by clicking on the update button on the top right then I click on the publish button and then I copy all of the code that appears above the copy button by clicking on that same button. I will then head over to my WordPress website create a new page and paste all of the form code but before doing that I click on the text tab of the text editor because what I'm pasting is not just text but HTML and JavaScript code. So we want to make sure WordPress knows this is code and not simple text. I will publish the page and then view it.</p><br/><h2>Adding CSS to the Form</h2><p>As you can see the form has no styling at all so let me fix that by first creating a style element with only the type attribute with a value of text forward slash CSS. After that I'm going to take all the CSS that I wrote and put it in a CSS minifier online but before doing that I have to replace the HubSpot form element ID that you see here as a selector in the CSS with the new form ID that I created in HubSpot. So I just find and replace all instances of the old form ID now I copy all the CSS and put it in the CSS minifier online. I then copy the minified CSS and paste it into the WordPress page text editor in between the style tags. I finally update the page and then view the front end to see what we did. As you can see my custom styling is being applied.</p><br/><h2>Adding JavaScript and jQuery to the Form</h2><p>The next thing I want to add is my JavaScript code. More specifically it's jQuery code so to use jQuery I need to add the Jquery CDN script tag in the text editor. We can just Google jQuery CDN. Click this link and I'm going to copy it and go over to my web page. I paste it before the HubSpot form code. Now I'm going to copy my custom jQuery code and paste it inside the HubSpot form code by adding a global form event called on form ready. I finally update the page and view the front-end. As you can see, my jQuery code adds some custom functionality to make the label elements move whenever I click on each field to type something.</p><br/><h2>Conclusion</h2><p> So that's how you can customize a HubSpot form with your own CSS and JavaScript or jQuery code. Make sure to follow my channel for more HubSpot and web development tutorials. You could be earning more than sixty five thousand dollars a year in salary or much much more just by helping others with their website. </p><br/><h2>My Code</h2><h4>HubSpot Form CSS</h4><p> (1) <a href='https://gist.github.com/subzero783/275d3a627eeb6d43aa9be825045758df' aria-label='https://gist.github.com/subzero783/275d3a627eeb6d43aa9be825045758df' target='_blank' rel='noreferrer noopener'>https://gist.github.com/subzero783/275d3a627eeb6d43aa9be825045758df</a></p><h4>HubSpot Form JavaScript/jQuery</h4><p> (2) <a href='https://gist.github.com/subzero783/05334473a4d903e83a48b03699a2bbe6' aria-label='https://gist.github.com/subzero783/05334473a4d903e83a48b03699a2bbe6' target='_blank' rel='noreferrer noopener'>https://gist.github.com/subzero783/05334473a4d903e83a48b03699a2bbe6</a></p><br/><h3>References</h3><h4>HubSpot</h4><p> (1) <a href='https://www.hubspot.com/' aria-label='https://www.hubspot.com/' target='_blank' rel='noreferrer noopener'>https://www.hubspot.com/</a></p><h4>jQuery CDN</h4><p> (2) <a href='https://releases.jquery.com/' aria-label='https://releases.jquery.com/' target='_blank' rel='noreferrer noopener'>https://releases.jquery.com/</a></p><h4>HubSpot article on how to share a HubSpot form using an external site</h4><p> (3) <a href='https://knowledge.hubspot.com/forms/how-can-i-share-a-hubspot-form-if-im-using-an-external-site' aria-label='https://knowledge.hubspot.com/forms/how-can-i-share-a-hubspot-form-if-im-using-an-external-site' target='_blank' rel='noreferrer noopener'>https://knowledge.hubspot.com/forms/how-can-i-share-a-hubspot-form-if-im-using-an-external-site</a></p><h4>HubSpot Pricing</h4><p> (4) <a href='https://www.hubspot.com/pricing/marketing/starter?products=marketing-hub-starter_1&term=annual' aria-label='https://www.hubspot.com/pricing/marketing/starter?products=marketing-hub-starter_1&term=annual' target='_blank' rel='noreferrer noopener'>https://www.hubspot.com/pricing/marketing/starter?products=marketing-hub-starter_1&term=annual</a></p><h4>CSS Minifier</h4><p> (5) <a href='https://www.toptal.com/developers/cssminifier' aria-label='https://www.toptal.com/developers/cssminifier' target='_blank' rel='noreferrer noopener'>https://www.toptal.com/developers/cssminifier</a></p><h4>How to Customize a HubSpot Form Embed Code</h4><p> (6) <a href='https://legacydocs.hubspot.com/docs/methods/forms/advanced_form_options' aria-label='https://legacydocs.hubspot.com/docs/methods/forms/advanced_form_options' target='_blank' rel='noreferrer noopener'>https://legacydocs.hubspot.com/docs/methods/forms/advanced_form_options</a></p>",
  },
];
